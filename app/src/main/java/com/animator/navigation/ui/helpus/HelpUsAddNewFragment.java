package com.animator.navigation.ui.helpus;

import android.annotation.SuppressLint;
import android.app.ProgressDialog;
import android.app.VoiceInteractor;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.util.Base64;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.Fragment;

import com.android.volley.AuthFailureError;
import com.android.volley.DefaultRetryPolicy;
import com.android.volley.NetworkResponse;
import com.android.volley.NoConnectionError;
import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.RetryPolicy;
import com.android.volley.TimeoutError;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;
import com.animator.navigation.R;
import com.animator.navigation.ui.jobs.JobsFragment;
import com.animator.navigation.ui.tools.VolleyMultipartRequest;
import com.animator.navigation.ui.blogs.BlogsFragment;
import com.animator.navigation.ui.tools.BaseURL;
import com.animator.navigation.ui.tools.Utils;

import net.gotev.uploadservice.ContentType;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static android.app.Activity.RESULT_OK;
import static android.content.Context.MODE_PRIVATE;

public class HelpUsAddNewFragment extends Fragment {

    private SharedPreferences share;
    private SharedPreferences.Editor editor;
    private RequestQueue queue;

    String memberId, family_no, help_by, help_title, help_person, help_details, help_for, help_contact;
    String upLoadServerUri = BaseURL.getBaseUrl()+"Api/helpus/android";
    EditText titleEt, nameEt, contactEt, detailEt;
    TextView helpForEt, genBy;
//    Spinner helpFor;
    Button chooseImg, uploadBlog;
    int PICK_IMAGE_REQUEST = 1;
    int serverResponseCode = 0;
//    Uri filePath;
//    private Bitmap bitmap;
    private String filePath;
    String pathUrl;
    ProgressDialog dialog = null;


    List<byte[]> images = new ArrayList(3);
    int imgCount = 0;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {

         View view = inflater.inflate(R.layout.fragment_add_helpus, container, false);
        ((AppCompatActivity) getActivity()).getSupportActionBar().setTitle("Sthanik Milkat (LEH VECH)");
        queue = Volley.newRequestQueue(getActivity());
        share = this.getActivity().getSharedPreferences("project", MODE_PRIVATE);
        memberId = share.getString("member_no", "");
        family_no = share.getString("family_no", "");
        help_by = share.getString("family_no", "");

        titleEt = (EditText)view.findViewById(R.id.titleEt);
        helpForEt = (TextView) view.findViewById(R.id.help_for);
        nameEt = (EditText)view.findViewById(R.id.nameEt);
        contactEt = (EditText)view.findViewById(R.id.contactEt);
        detailEt = (EditText)view.findViewById(R.id.detailEt);
        genBy = (TextView)view.findViewById(R.id.genBy);
        chooseImg = (Button)view.findViewById(R.id.chooseImage);
        uploadBlog = (Button)view.findViewById(R.id.mButton);
//        helpFor = (Spinner) view.findViewById(R.id.help_for);

        genBy.setText("Ticket Generated By" + " " + memberId);

        chooseImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                chooseImage();
            }
        });

        uploadBlog.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                help_title = titleEt.getText().toString();
                help_for = helpForEt.getText().toString();
                help_person = nameEt.getText().toString();
                help_details = detailEt.getText().toString();
//                help_for = String.valueOf(helpFor.getSelectedItemId());
                help_contact = contactEt.getText().toString();

                if (help_title.equals("") && help_person.equals("") && help_details.equals("") && help_for.equals("") && help_contact.equals("")) {
                    Toast.makeText(getContext(), "Please Enter Valid Fields", Toast.LENGTH_SHORT).show();
                } else {
                    dialog = ProgressDialog.show(getContext(), "", "Uploading Sthanik Milkat...", true);
                    new Thread(new Runnable() {
                        public void run() {
                            getActivity().runOnUiThread(new Runnable() {
                                public void run() {
//                                messageText.setText("uploading started.....");
                                }
                            });
//                        uploadFile(uploadFilePath + "" + uploadFileName);
//                        uploadFile(pathUrl);
//                            uploadBitmap(bitmap);
                            addHelp(help_title, help_for, help_person, help_details, help_contact);
                        }
                    }).start();
                }
            }
        });

        return view;
    }

    private void chooseImage() {
        Intent intent = new Intent();
        intent.setType("image/*");
        intent.putExtra("android.intent.extra.ALLOW_MULTIPLE", true);
        intent.setAction("android.intent.action.GET_CONTENT");
        startActivityForResult(Intent.createChooser(intent, "Select Picture"), 1);
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

//        if (requestCode == PICK_IMAGE_REQUEST && resultCode == RESULT_OK && data != null && data.getData() != null) {
//            Uri picUri = data.getData();
//            filePath = getPath(picUri);
//            if (filePath != null) {
//                try {
//
////                    textView.setText("File Selected");
//                    Log.d("filePath", String.valueOf(filePath));
//                    bitmap = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), picUri);
////                    uploadBitmap(bitmap);
////                    imageView.setImageBitmap(bitmap);
//                } catch (IOException e) {
//                    e.printStackTrace();
//                }
//            } else {
//                Toast.makeText(
//                        getActivity(), "no image selected",
//                        Toast.LENGTH_LONG).show();
//            }
//        }

        imgCount = 0;
        images.clear();
        chooseImg.setText("  Select Images");
        if (requestCode != 1 || resultCode != -1) {
            Toast.makeText(getContext(), "Not Selected Image", Toast.LENGTH_LONG).show();
        } else if (data.getClipData() != null) {
            int count = data.getClipData().getItemCount();
            if (count > 3) {
                Utils.showToast(getContext(), "Kindly select maximum 3 images");
                return;
            }
            for (int i = 0; i < count; i++) {
                imgCount++;
                images.add(Utils.getImageFileToByte(getActivity(), data.getClipData().getItemAt(i).getUri()));
            }
        } else if (data.getData() != null) {
            images.add(Utils.getImageFileToByte(getActivity(), data.getData()));
        }
        if (images.size() > 0) {
            chooseImg.setText(String.format("  Select Images(%d)", new Object[]{Integer.valueOf(images.size())}));
        }
    }

    public String getPath(Uri uri) {
        Cursor cursor = getActivity().getContentResolver().query(uri, null, null, null, null);
        cursor.moveToFirst();
        String document_id = cursor.getString(0);
        document_id = document_id.substring(document_id.lastIndexOf(":") + 1);
        cursor.close();

        cursor = getActivity().getContentResolver().query(
                android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI,
                null, MediaStore.Images.Media._ID + " = ? ", new String[]{document_id}, null);
        cursor.moveToFirst();
        String path = cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA));
        cursor.close();

        return path;
    }

    public byte[] getFileDataFromDrawable(Bitmap bitmap) {
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        bitmap.compress(Bitmap.CompressFormat.PNG, 80, byteArrayOutputStream);
        return byteArrayOutputStream.toByteArray();
    }

    private void addHelp(final String help_title, final String help_for, final String help_person, final String help_details, final String help_contact) {

        VolleyMultipartRequest r4 = new VolleyMultipartRequest(1, upLoadServerUri, new Response.Listener<JSONObject>() {
            public void onResponse(JSONObject response) {
                dialog.dismiss();
                try {
                    Toast.makeText(getContext(), response.getString("message"), Toast.LENGTH_LONG).show();
                    AppCompatActivity activity = (AppCompatActivity) getContext();
                    Fragment myFragment = new HelpUsPublicListFragment();
                    activity.getSupportFragmentManager().beginTransaction().replace(R.id.frame, myFragment).addToBackStack(null).commit();
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        }, new Response.ErrorListener() {
            public void onErrorResponse(VolleyError error) {
                Context context = getContext();
                Toast.makeText(context, "Error : " + error.getMessage(), Toast.LENGTH_LONG).show();
                dialog.dismiss();
            }
        }) {
            /* access modifiers changed from: protected */
            public Map<String, String> getParams() {
                Map<String, String> params = new HashMap<>();
                params.put("help_by", memberId);
                params.put("family_no", family_no);
                params.put("help_title", help_title);
                params.put("help_person", help_person);
                params.put("help_details", help_details);
                params.put("help_for", help_for);
                params.put("help_contact", help_contact);
                params.put("member_no", memberId);
                Log.e("Params help ", params.toString());
                return params;

            }

            /* access modifiers changed from: protected */
            public Map<String, ArrayList<VolleyMultipartRequest.DataPart>> getByteData() {
                new HashMap();
                Map<String, ArrayList<VolleyMultipartRequest.DataPart>> imageList = new HashMap<>();
                ArrayList<VolleyMultipartRequest.DataPart> dataPart = new ArrayList<>();
                for (int i = 0; i < images.size(); i++) {
                    byte[] image = images.get(i);
                    Log.d("Add_Blog_Images", "image byte : " + image);
                    dataPart.add(new VolleyMultipartRequest.DataPart("image_" + i, image, ContentType.IMAGE_JPEG));
                }
                imageList.put("bimages[]", dataPart);
                Log.e("imageList", imageList.toString());
                return imageList;
            }
        };
        queue.add(r4);
        try {
            Log.d("add_blog_request", "Request body: " + new String(r4.getBody()));
        } catch (AuthFailureError authFailureError) {
            authFailureError.printStackTrace();
        }
    }
}
